// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	orders "books_online_api/business/orders"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// OrderDetailRepository is an autogenerated mock type for the OrderDetailRepository type
type OrderDetailRepository struct {
	mock.Mock
}

// CreateOrder provides a mock function with given fields: ctx, domain
func (_m *OrderDetailRepository) CreateOrder(ctx context.Context, domain orders.Domain) (orders.Domain, error) {
	ret := _m.Called(ctx, domain)

	var r0 orders.Domain
	if rf, ok := ret.Get(0).(func(context.Context, orders.Domain) orders.Domain); ok {
		r0 = rf(ctx, domain)
	} else {
		r0 = ret.Get(0).(orders.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, orders.Domain) error); ok {
		r1 = rf(ctx, domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTotalPrice provides a mock function with given fields: ctx, domain
func (_m *OrderDetailRepository) UpdateTotalPrice(ctx context.Context, domain orders.Domain) (orders.Domain, error) {
	ret := _m.Called(ctx, domain)

	var r0 orders.Domain
	if rf, ok := ret.Get(0).(func(context.Context, orders.Domain) orders.Domain); ok {
		r0 = rf(ctx, domain)
	} else {
		r0 = ret.Get(0).(orders.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, orders.Domain) error); ok {
		r1 = rf(ctx, domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
